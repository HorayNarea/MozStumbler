apply plugin: 'com.android.library'

allprojects {
    repositories {
        mavenCentral()
        jcenter()
    }
}

version = "1.8.6"
group = 'org.mozilla.mozstumbler'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
    }

    lintOptions {
        checkReleaseBuilds false
        //If you want to continue even if errors found use following line
        abortOnError false
    }


}

dependencies {
    androidTestCompile 'junit:junit:4.10'
    testCompile        'junit:junit:4.10'

    androidTestCompile  'org.skyscreamer:jsonassert:1.2.3'
    testCompile         'org.skyscreamer:jsonassert:1.2.3'
    androidTestCompile  'com.google.code.gson:gson:2.8.9'
    testCompile         'com.google.code.gson:gson:2.8.9'

    androidTestCompile 'org.robolectric:robolectric:2.4'
    testCompile        'org.robolectric:robolectric:2.4'

    androidTestCompile "org.mockito:mockito-core:1.10.19"
    testCompile        "org.mockito:mockito-core:1.10.19"

    // https://developer.android.com/tools/support-library/features.html
    // In general, we recommend including the v4 support and v7 appcompat
    // libraries, because they support a wide range of Android versions and
    // provide APIs for recommended user interface patterns.

    compile "com.android.support:support-v4:28.0.0"
    compile 'com.android.support:appcompat-v7:28.0.0'

    // Acralyzer crash reports
    compile('ch.acra:acra:4.5.0') {
        exclude group: 'org.json'
    }

    // marisa-trie for offline geo support
    compile 'org.mozilla.mozstumbler.marisa:marisa:0.4'

    // Google Guava.  I'm lazy and want to use collections that aren't
    // crazy.
    compile group: 'com.google.guava', name: 'guava', version: '30.0-android'

}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}
